import Module from "./module";import * as path from "path";import fse from "fs-extra";import {LOCALES_CODE} from "../constants";import * as process from "process";import * as os from "os";import * as fs from "fs";export interface BundleOptions {    entry: {        localeRoot: string;        main: string    }}export default class Bundle {    private readonly tmpRootDir: string = path.resolve(process.cwd(),'.cTrans')    private tmpLocaleDir: string = ''    private readonly options: BundleOptions    private modules?: Module[]    private mainModule?: Module    constructor(options: BundleOptions) {        this.options = options        this.init()        this.buildModules()    }    private init(){        const {entry:{localeRoot,main}} = this.options        const basename = path.basename(localeRoot)        if(!fse.existsSync(this.tmpRootDir)){            fse.mkdirSync(this.tmpRootDir)        }        this.tmpLocaleDir = path.resolve(this.tmpRootDir,basename)        if(!fse.existsSync(this.tmpLocaleDir)){            fse.mkdirSync(this.tmpLocaleDir)        }        console.log('初始化完成')    }    /**     * @description 构建模块图     * @private     */    private buildModules() {    }    private translateAll(){    }}